version: "3.8"

x-app: &app-tpl
    image: node:14.16.1-alpine
    restart: always
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=docker
      - JAEGER_AGENT_HOST=jaeger
#    networks:
#      - jaeger-tracing-network
    volumes:
      - ./:/home/node/app
    depends_on:
      - pgdb
      - zookeeper

services:
#  payment-service:
#    <<: *app-tpl
#    container_name: payment-service
#    ports:
#      - "9000:9000"
#    command: "npm run start:dev payment-service"
#  warehouse-service:
#    <<: *app-tpl
#    container_name: warehouse-service
#    ports:
#      - "9001:9000"
#    command: "npm run start:dev warehouse-service"
#  delivery-service:
#    <<: *app-tpl
#    container_name: delivery-service
#    ports:
#      - "9002:9000"
#    command: "npm run start:dev delivery-service"
  coordinator-service:
    <<: *app-tpl
    container_name: coordinator-service
    ports:
      - "9003:9000"
    command: "npm run start:dev coordinator-service"
  pgdb:
    hostname: pgdb
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: mypassword
#    networks:
#      - jaeger-tracing-network
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
#    networks:
#      - jaeger-tracing-network
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
#    networks:
#      - jaeger-tracing-network
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
#    networks:
#      - jaeger-tracing-network
volumes:
  redis:

#networks:
#  jaeger-tracing-network:
